[{"fields": {"position": 1, "name": "C\u00e1c k\u00ec thi online", "created_by": 1, "group_type": "f"}, "model": "forum.forumgroup", "pk": 1}, {"fields": {"position": 2, "name": "Online Judge", "created_by": 1, "group_type": "f"}, "model": "forum.forumgroup", "pk": 2}, {"fields": {"position": 4, "name": "Th\u1ea3o lu\u1eadn chung", "created_by": 1, "group_type": "f"}, "model": "forum.forumgroup", "pk": 3}, {"fields": {"position": 5, "name": "Tr\u00f2 chuy\u1ec7n", "created_by": 1, "group_type": "f"}, "model": "forum.forumgroup", "pk": 4}, {"fields": {"position": 0, "name": "Thu\u1eadt to\u00e1n", "created_by": 1, "group_type": "l"}, "model": "forum.forumgroup", "pk": 5}, {"fields": {"position": 0, "name": "Machine Learning", "created_by": 1, "group_type": "l"}, "model": "forum.forumgroup", "pk": 6}, {"fields": {"position": 0, "name": "Problem Discuss", "created_by": 1, "group_type": "p"}, "model": "forum.forumgroup", "pk": 7}, {"fields": {"position": 3, "name": "Thi Qu\u1ed1c gia, Qu\u1ed1c t\u1ebf", "created_by": 1, "group_type": "f"}, "model": "forum.forumgroup", "pk": 8}, {"fields": {"num_topics": 2, "created_at": "2015-03-01T09:28:52Z", "forum_group": 1, "created_by": 1, "num_posts": 7, "position": 2, "desc": "C\u00e1c k\u1ef3 thi tr\u00ean codeforces.com", "last_post": 7, "name": "Codeforces"}, "model": "forum.forum", "pk": 1}, {"fields": {"num_topics": 0, "created_at": "2015-03-01T09:29:14Z", "forum_group": 1, "created_by": 1, "num_posts": 0, "position": 3, "desc": "C\u00e1c k\u1ef3 thi tr\u00ean topcoder.com/tc", "last_post": null, "name": "Topcoder"}, "model": "forum.forum", "pk": 2}, {"fields": {"num_topics": 0, "created_at": "2015-03-01T09:30:36Z", "forum_group": 2, "created_by": 1, "num_posts": 0, "position": 1, "desc": "C\u00e1c b\u00e0i t\u1eadp tr\u00ean vn.spoj.com v\u00e0 www.spoj.com", "last_post": null, "name": "VOJ, SPOJ"}, "model": "forum.forum", "pk": 3}, {"fields": {"num_topics": 0, "created_at": "2015-03-01T09:30:52Z", "forum_group": 2, "created_by": 1, "num_posts": 0, "position": 2, "desc": "C\u00e1c b\u00e0i t\u1eadp tr\u00ean acm.timus.ru, acm.sgu.ru, UVa, ...", "last_post": null, "name": "C\u00e1c OJ kh\u00e1c"}, "model": "forum.forum", "pk": 4}, {"fields": {"num_topics": 0, "created_at": "2015-03-01T09:31:09Z", "forum_group": 3, "created_by": 1, "num_posts": 0, "position": 1, "desc": "Trao \u0111\u1ed5i v\u1ec1 thu\u1eadt to\u00e1n", "last_post": null, "name": "Thu\u1eadt to\u00e1n "}, "model": "forum.forum", "pk": 5}, {"fields": {"num_topics": 0, "created_at": "2015-03-01T09:31:29Z", "forum_group": 3, "created_by": 1, "num_posts": 0, "position": 2, "desc": "Trao \u0111\u1ed5i v\u1ec1 Machine Learning", "last_post": null, "name": "Machine Learning"}, "model": "forum.forum", "pk": 6}, {"fields": {"num_topics": 0, "created_at": "2015-03-01T09:31:43Z", "forum_group": 4, "created_by": 1, "num_posts": 0, "position": 1, "desc": "Chuy\u1ec7n g\u00ec c\u0169ng k\u1ec3", "last_post": null, "name": "K\u1ec3 chuy\u1ec7n \u0111\u00eam khuya, tr\u00ean tr\u1eddi d\u01b0\u1edbi bi\u1ec3n"}, "model": "forum.forum", "pk": 7}, {"fields": {"num_topics": 2, "created_at": "2015-03-21T08:24:40Z", "forum_group": 5, "created_by": 1, "num_posts": 5, "position": 0, "desc": "T\u1ed5ng h\u1ee3p c\u00e1c b\u00e0i vi\u1ebft v\u1ec1 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u", "last_post": 12, "name": "C\u1ea5u tr\u00fac d\u1eef li\u1ec7u"}, "model": "forum.forum", "pk": 8}, {"fields": {"num_topics": 0, "created_at": "2015-03-28T20:10:26Z", "forum_group": 5, "created_by": 1, "num_posts": 0, "position": 0, "desc": "T\u1ed5ng h\u1ee3p c\u00e1c b\u00e0i vi\u1ebft v\u1ec1 \u0111\u1ed3 th\u1ecb.", "last_post": null, "name": "\u0110\u1ed3 th\u1ecb"}, "model": "forum.forum", "pk": 9}, {"fields": {"num_topics": 0, "created_at": "2015-03-28T20:11:10Z", "forum_group": 5, "created_by": 1, "num_posts": 0, "position": 0, "desc": "T\u1ed5ng h\u1ee3p c\u00e1c b\u00e0i vi\u1ebft v\u1ec1 quy ho\u1ea1ch \u0111\u1ed9ng", "last_post": null, "name": "Quy ho\u1ea1ch \u0111\u1ed9ng"}, "model": "forum.forum", "pk": 10}, {"fields": {"num_topics": 0, "created_at": "2015-04-19T18:57:12Z", "forum_group": 1, "created_by": 1, "num_posts": 0, "position": 1, "desc": "C\u00e1c k\u1ef3 thi do VNOI t\u1ed5 ch\u1ee9c: VM, VO", "last_post": null, "name": "C\u00e1c k\u1ef3 thi c\u1ee7a VNOI"}, "model": "forum.forum", "pk": 11}, {"fields": {"num_topics": 0, "created_at": "2015-04-19T18:59:07Z", "forum_group": 1, "created_by": 1, "num_posts": 0, "position": 4, "desc": "USACO, COCI, Codechef...", "last_post": null, "name": "C\u00e1c k\u1ef3 thi kh\u00e1c"}, "model": "forum.forum", "pk": 12}, {"fields": {"num_topics": 0, "created_at": "2015-04-19T19:00:33Z", "forum_group": 8, "created_by": 1, "num_posts": 0, "position": 1, "desc": "Trao \u0111\u1ed5i v\u1ec1 k\u1ef3 thi HSG Qu\u1ed1c gia", "last_post": null, "name": "Thi HSG Qu\u1ed1c gia"}, "model": "forum.forum", "pk": 13}, {"fields": {"num_topics": 0, "created_at": "2015-04-19T19:00:58Z", "forum_group": 8, "created_by": 1, "num_posts": 0, "position": 2, "desc": "Trao \u0111\u1ed5i v\u1ec1 thi IOI, APIO", "last_post": null, "name": "IOI, APIO"}, "model": "forum.forum", "pk": 14}, {"fields": {"num_topics": 0, "created_at": "2015-04-19T19:01:28Z", "forum_group": 8, "created_by": 1, "num_posts": 0, "position": 3, "desc": "Thi ACM khu v\u1ef1c, chung k\u1ebft", "last_post": null, "name": "ACM"}, "model": "forum.forum", "pk": 15}, {"fields": {"num_topics": 0, "created_at": "2015-04-19T19:01:56Z", "forum_group": 8, "created_by": 1, "num_posts": 0, "position": 4, "desc": "C\u00e1c k\u1ef3 thi kh\u00e1c", "last_post": null, "name": "C\u00e1c k\u1ef3 thi kh\u00e1c"}, "model": "forum.forum", "pk": 16}, {"fields": {"num_topics": 0, "created_at": "2015-04-19T19:04:35Z", "forum_group": 4, "created_by": 1, "num_posts": 0, "position": 2, "desc": "B\u1ea1n \u0111\u00e3 \u0111\u1ebfn v\u1edbi Tin h\u1ecdc th\u1ebf n\u00e0o? H\u00e3y chia s\u1ebb :)", "last_post": null, "name": "H\u1ecdc tin, v\u00ec sao, th\u1ebf n\u00e0o?"}, "model": "forum.forum", "pk": 17}, {"fields": {"num_topics": 0, "created_at": "2015-04-19T19:05:08Z", "forum_group": 4, "created_by": 1, "num_posts": 0, "position": 3, "desc": "B\u1ea1n mu\u1ed1n \u0111\u00f3ng g\u00f3p? B\u1ea1n th\u1ea5y di\u1ec5n \u0111\u00e0n c\u00f3 bug? B\u1ea1n mu\u1ed1n c\u00f3 th\u00eam t\u00ednh n\u0103ng? H\u00e3y trao \u0111\u1ed5i \u1edf \u0111\u00e2y", "last_post": null, "name": "\u0110\u00f3ng g\u00f3p \u00fd ki\u1ebfn cho VNOI"}, "model": "forum.forum", "pk": 18}, {"fields": {"num_topics": 0, "created_at": "2015-04-19T19:05:40Z", "forum_group": 4, "created_by": 1, "num_posts": 0, "position": 4, "desc": "Kh\u00f4ng bi\u1ebft vi\u1ebft v\u00e0o \u0111\u00e2u? H\u00e3y vi\u1ebft v\u00e0o \u0111\u00e2y", "last_post": null, "name": "C\u00e1c ch\u1ee7 \u0111\u1ec1 kh\u00e1c"}, "model": "forum.forum", "pk": 19}, {"fields": {"updated_by": 1, "forum": 1, "title": "CF Round 294", "created_at": "2015-03-01T09:33:23Z", "is_pinned": true, "updated_at": "2015-03-28T20:09:04Z", "created_by": 1, "content": "<p>H\u00f4m nay 11h30 thi Codeforce nh\u00e9!!!</p><ul><li>bla</li><li>bla<ol><li>ok</li><li>abc</li></ol></li></ul><p><strong>hihi</strong></p><p><em>haha</em></p><p><em><span class=\"math-tex\">\\(x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\)</span></em></p><p>@RR</p><p><img alt=\"water heart\" src=\"http://www.somdecristal.com.br/wp-content/uploads/2012/03/heart-drop-water.jpg\" style=\"\"></p>", "num_posts": 4, "post": 1, "last_post": 4}, "model": "forum.topic", "pk": 1}, {"fields": {"updated_by": 2, "forum": 1, "title": "Codeforce 294 B\u00e0i E", "created_at": "2015-03-01T09:40:06Z", "is_pinned": true, "updated_at": "2015-03-19T18:18:54Z", "created_by": 2, "content": "<p>B\u00e0i n\u00e0y l\u00e0m th\u1ebf n\u00e0o h\u1ea3 c\u00e1c b\u1ea1n :(</p>\n\n<p><a href=\"http://codeforces.com/contest/519/problem/E\">http://codeforces.com/contest/519/problem/E</a></p>\n\n<pre><code class=\"language-python\">def ok(abc):\n    return 'OK'</code></pre>\n\n<p>\u00a0</p>\n", "num_posts": 3, "post": 5, "last_post": 7}, "model": "forum.topic", "pk": 2}, {"fields": {"updated_by": 1, "forum": 8, "title": "Persistent Data Structures", "created_at": null, "is_pinned": true, "updated_at": "2015-03-21T08:28:54Z", "created_by": 1, "content": "<p><strong>1. M\u1edf \u0111\u1ea7u</strong></p>\n\n<p>Persistent Data Structures l\u00e0 nh\u1eefng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c d\u00f9ng khi ch\u00fang ta c\u1ea7n c\u00f3 \"to\u00e0n b\u1ed9 l\u1ecbch s\u1eed\" c\u1ee7a c\u00e1c thay \u0111\u1ed5i tr\u00ean 1 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u. (Ch\u00fa \u00fd r\u1eb1ng t\u1eeb \"persistent\" c\u00f2n \u0111\u01b0\u1ee3c d\u00f9ng trong \"persistent storage\" v\u1edbi m\u1ed9t ngh\u0129a ho\u00e0n to\u00e0n kh\u00e1c).</p>\n\n<p>X\u00e9t b\u00e0i to\u00e1n v\u00ed d\u1ee5:</p>\n\n<ul>\n\t<li>Cho m\u1ed9t d\u00e3y A g\u1ed3m N ph\u1ea7n t\u1eed.</li>\n\t<li>C\u00f3 2 lo\u1ea1i truy v\u1ea5n:\n\t<ul>\n\t\t<li>Update: G\u00e1n Ai = v</li>\n\t\t<li>Query: T\u00ecm min(Ai, ..., Aj) t\u1ea1i th\u1eddi \u0111i\u1ec3m sau ph\u00e9p g\u00e1n th\u1ee9 K.</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>N\u1ebfu kh\u00f4ng c\u00f3 \u0111o\u1ea1n \"t\u1ea1i th\u1eddi \u0111i\u1ec3m sau ph\u00e9p g\u00e1n th\u1ee9 K\", b\u00e0i to\u00e1n l\u00e0 1 b\u00e0i c\u01a1 b\u1ea3n tr\u00ean Interval Tree (Segment Tree). \u0110o\u1ea1n \"t\u1ea1i th\u1eddi \u0111i\u1ec3m sau ph\u00e9p g\u00e1n th\u1ee9 K\" bu\u1ed9c ch\u00fang ta ph\u1ea3i l\u01b0u l\u1ea1i c\u00e1c th\u00f4ng tin v\u1ec1 l\u1ecbch s\u1eed c\u1eadp nh\u1eadt CTDL - \u0111\u00e2y ch\u00ednh l\u00e0 t\u01b0 t\u01b0\u1edfng c\u1ee7a Persistent Data Structures.</p>\n\n<p>G\u1ecdi tr\u1ea1ng th\u00e1i c\u1ee7a CTDL t\u1ea1i m\u1ed9t th\u1eddi \u0111i\u1ec3m l\u00e0 1 version c\u1ee7a CTDL \u0111\u00f3. M\u1ed9t c\u00e1ch c\u1ee5 th\u1ec3 h\u01a1n, persistent data structures cho ph\u00e9p ch\u00fang ta:</p>\n\n<ul>\n\t<li>Truy v\u1ea5n tr\u00ean m\u1ed9t version c\u0169 c\u1ee7a CTDL</li>\n\t<li>C\u1eadp nh\u1eadt d\u1eef li\u1ec7u trong version m\u1edbi nh\u1ea5t c\u1ee7a CTDL, b\u1eb1ng c\u00e1ch t\u1ea1o th\u00eam 1 version m\u1edbi c\u1ee7a CTDL.\n\t<ul>\n\t\t<li>Trong m\u1ed9t s\u1ed1 c\u00e1ch c\u00e0i \u0111\u1eb7t, Persistent Data Structures c\u00f2n c\u00f3 th\u1ec3 cho ph\u00e9p thay version hi\u1ec7n t\u1ea1i c\u1ee7a CTDL th\u00e0nh m\u1ed9t version trong qu\u00e1 kh\u1ee9 (ph\u1ea7n 2 m\u00f4 t\u1ea3 ph\u01b0\u01a1ng ph\u00e1p c\u00e0i \u0111\u1eb7t c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n \u0111\u01b0\u1ee3c thao t\u00e1c n\u00e0y).</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>C\u1ea7n hi\u1ec3u r\u1eb1ng Persistent Data Structures kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t lo\u1ea1i CTDL m\u1edbi. N\u00f3 l\u00e0 m\u1ed9t s\u1ed1 k\u0129 n\u0103ng t\u1ed5ng qu\u00e1t gi\u00fap th\u00eam th\u00f4ng tin v\u1ec1 l\u1ecbch s\u1eed thay \u0111\u1ed5i v\u00e0o CTDL th\u00f4ng th\u01b0\u1eddng\u00a0<strong>m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3</strong>. V\u00ed d\u1ee5:</p>\n\n<ul>\n\t<li>IT + Persistent trick --&gt; Persistent IT</li>\n\t<li>BIT + Persistent trick --&gt; Persistent BIT</li>\n</ul>\n\n<p>T\u1ea1i sao l\u1ea1i l\u00e0 \"m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3\"? B\u1edfi v\u00ec ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 c\u00f3 m\u1ed9t Persistent Data Structures b\u1eb1ng c\u00e1ch: khi c\u1eadp nh\u1eadt, ta t\u1ea1o m\u1ed9t b\u1ea3n sao ho\u00e0n to\u00e0n m\u1edbi c\u1ee7a CTDL, thay \u0111\u1ed5i m\u1ed9t s\u1ed1 d\u1eef li\u1ec7u tr\u00ean n\u00f3 v\u00e0 l\u01b0u l\u1ea1i. Nh\u01b0 v\u1eady ta lu\u00f4n c\u00f3 \u0111\u01b0\u1ee3c m\u1ed9t thu\u1eadt to\u00e1n v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p O(Q*N*T) v\u00e0 b\u1ed9 nh\u1edb O(Q*N), v\u1edbi Q l\u00e0 s\u1ed1 thao t\u00e1c c\u1ea7n th\u1ef1c hi\u1ec7n, v\u00e0 N l\u00e0 \u0111\u1ed9 l\u1edbn c\u1ee7a CTDL, v\u00e0 T l\u00e0 th\u1eddi gian \u0111\u1ec3 th\u1ef1c hi\u1ec7n thao t\u00e1c tr\u00ean CTDL.</p>\n\n<p>Trong c\u00e1c ph\u1ea7n d\u01b0\u1edbi \u0111\u00e2y, m\u00ecnh s\u1ebd tr\u00ecnh b\u00e0y v\u1ec1 2 k\u0129 thu\u1eadt th\u00f4ng th\u01b0\u1eddng c\u1ee7a Persistent Data Structures:</p>\n\n<ul>\n</ul>\n\n<ul>\n</ul>\n", "num_posts": 4, "post": 8, "last_post": 11}, "model": "forum.topic", "pk": 3}, {"fields": {"updated_by": 1, "forum": 8, "title": "Mo algorithm", "created_at": "2015-03-28T20:22:20Z", "is_pinned": false, "updated_at": "2015-03-28T20:23:02Z", "created_by": 1, "content": "<p><strong>B\u00e0i to\u00e1n:</strong></p><p>Cho m\u1ed9t d\u00e3y s\u1ed1 A g\u1ed3m N ph\u1ea7n t\u1eed. C\u1ea7n th\u1ef1c hi\u1ec7n Q truy v\u1ea5n, m\u1ed7i truy v\u1ea5n (i, j) y\u00eau c\u1ea7u t\u00ecm mode(Ai, ..., Aj). (Mode l\u00e0 gi\u00e1 tr\u1ecb xu\u1ea5t hi\u1ec7n nhi\u1ec1u l\u1ea7n nh\u1ea5t). Gi\u1edbi h\u1ea1n: N, Q, Ai &lt;= 10^5.</p><p>\u00a0</p><p>Khi \u0111\u1ecdc \u0111\u1ec1 m\u1ed9t b\u00e0i to\u00e1n truy v\u1ea5n ki\u1ec3u n\u00e0y, c\u00f3 l\u1ebd CTDL \u0111\u1ea7u ti\u00ean m\u00e0 c\u00e1c b\u1ea1n ngh\u0129 \u0111\u1ebfn l\u00e0 Interval Tree. Nh\u01b0ng c\u00f3 \u0111i\u1ec1u g\u00ec \u0111\u00f3 kh\u00f4ng \u1ed5n trong b\u00e0i n\u00e0y: Khi c\u00f3 th\u00f4ng tin c\u1ee7a 2 n\u00fat con [l, mid] v\u00e0 [mid+1, r], r\u1ea5t kh\u00f3 \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c b\u1ea5t k\u1ef3 th\u00f4ng tin h\u1eefu \u00edch n\u00e0o c\u1ee7a [l, r].</p><p><strong>Mo's Algorithm:</strong></p><p>\u0110i\u1ec3m \u0111\u1eb7c bi\u1ec7t c\u1ee7a h\u00e0m mode ch\u1eafc ch\u1eafn s\u1ebd khi\u1ebfn cho b\u1ea1n c\u00e0ng ng\u00e0y c\u00e0ng tr\u1edf n\u00ean tuy\u1ec7t v\u1ecdng n\u1ebfu c\u00e0ng c\u1ed1 ngh\u0129 v\u1ec1 c\u00e1ch ti\u1ebfp c\u1eadn n\u00f3. L\u00fac n\u00e0y, b\u1ea1n c\u1ea7n nh\u1edb \u0111\u1ebfn c\u00e2u n\u00f3i n\u1ed5i ti\u1ebfng c\u1ee7a RR: \"L\u00fac tuy\u1ec7t v\u1ecdng, h\u00e3y duy\u1ec7t\".</p><p>\u00a0</p><p>V\u1eady duy\u1ec7t nh\u01b0 th\u1ebf n\u00e0o?</p><ul><li>V\u1edbi m\u1ed7i truy v\u1ea5n, ta for t\u1eeb tr\u00e1i sang ph\u1ea3i, \u0111\u1ebfm s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n, t\u1eeb \u0111\u00f3 t\u00ecm \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3.</li></ul><p>Ti\u1ebfp t\u1ee5c ch\u00e0y c\u1ed1i v\u1edbi ph\u01b0\u01a1ng ph\u00e1p duy\u1ec7t, b\u1ea1n s\u1ebd nh\u1eadn ra c\u00f3 r\u1ea5t nhi\u1ec1u c\u00e1ch \u0111\u1ec3 c\u1ea3i ti\u1ebfn n\u00f3:</p><ul><li>\u0110\u1ec3 tr\u00e1nh ph\u1ea3i kh\u1edfi t\u1ea1o l\u1ea1i m\u1ea3ng \u0111\u1ebfm (hi\u1ec3n nhi\u00ean \u0111i\u1ec1u n\u00e0y r\u1ea5t t\u1ed1n th\u1eddi gian), sau khi tr\u1ea3 l\u1eddi truy v\u1ea5n [l1, r1], \u0111\u1ec3 tr\u1ea3 l\u1eddi truy v\u1ea5n [l2, r2], b\u1ea1n ch\u1ec9 c\u1ea7n c\u1ed9ng tr\u1eeb m\u1ea3ng \u0111\u1ebfm. C\u1ee5 th\u1ec3:<ul><li>N\u1ebfu l2 &gt; l1, gi\u1ea3m s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a A(l1), ..., A(l2-1)</li><li>N\u1ebfu l2 &lt; l1, t\u0103ng s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a A(l2), ..., A(l1-1)</li><li>T\u01b0\u01a1ng t\u1ef1 v\u1edbi r1 v\u00e0 r2.</li></ul></li><li>\u0110\u1ec3 c\u1eadp nh\u1eadt s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n l\u1edbn nh\u1ea5t th\u00ec c\u00f3 th\u1ec3 d\u00f9ng th\u00eam set.</li></ul><p>Khi c\u1ea3i ti\u1ebfn \u0111\u1ebfn b\u01b0\u1edbc n\u00e0y, c\u00f4ng vi\u1ec7c t\u1ed1n th\u1eddi gian nh\u1ea5t c\u00f2n l\u1ea1i l\u00e0 t\u0103ng gi\u1ea3m s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n. Do \u0111\u00f3, ch\u00fang ta c\u1ea7n sort c\u00e1c truy v\u1ea5n theo m\u1ed9t th\u1ee9 t\u1ef1 h\u1ee3p l\u00fd h\u01a1n, sao cho c\u00e1c truy v\u1ea5n \"gi\u1ed1ng gi\u1ed1ng\" nhau \u1edf g\u1ea7n nhau h\u01a1n.</p><p>\u00a0</p><p>\u0110\u1ebfn \u0111\u00e2y, b\u1ea1n \u0111\u00e3 t\u00ecm \u0111\u01b0\u1ee3c Mo's algorithm. Mo's algorithm l\u00e0 ph\u01b0\u01a1ng ph\u00e1p sort c\u00e1c truy v\u1ea5n l\u1ea1i, sao cho t\u1ed5ng th\u1eddi gian th\u1ef1c hi\u1ec7n vi\u1ec7c di chuy\u1ec3n gi\u1eefa c\u00e1c truy v\u1ea5n kh\u00f4ng qu\u00e1<strong>O(N*sqrt(N) + Q*sqrt(N))</strong>. (\"Di chuy\u1ec3n\" gi\u1eefa c\u00e1c truy v\u1ea5n ch\u00ednh l\u00e0 thao t\u00e1c \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a \u1edf tr\u00ean)</p><pre><code>S = the max integer number which is less than sqrt(N);\nbool cmp(Query A, Query B)\n{\n  if (A.l / S \uff01= B.l / S) return A.l / S &lt; B.l / S;\n  return A.r &lt; B.r\n}</code></pre><p>\u00a0</p><p>S\u1eed d\u1ee5ng Mo's Algorithm, b\u1ea1n \u0111\u00e3 c\u00f3 th\u1ec3 thu \u0111\u01b0\u1ee3c m\u1ed9t thu\u1eadt to\u00e1n ho\u00e0n ch\u1ec9nh cho b\u00e0i n\u00e0y v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p\u00a0<strong>O(N*sqrt(N) + Q*sqrt(N))</strong>:</p><ul><li>Sort t\u1ea5t c\u1ea3 c\u00e1c truy v\u1ea5n theo Mo's Algorithm</li><li>G\u1ecdi\u00a0<strong>S(N)</strong>\u00a0l\u00e0 m\u1ed9t m\u1ea3ng g\u1ed3m\u00a0<strong>N</strong>\u00a0set (c\u00f3 th\u1ec3 c\u00e0i b\u1eb1ng hash table \u0111\u1ec3 gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p).<strong>S(i)</strong>\u00a0ch\u1ee9a t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 xu\u1ea5t hi\u1ec7n \u0111\u00fang\u00a0<strong>i</strong>\u00a0l\u1ea7n.</li><li>G\u1ecdi\u00a0<strong>A(val)</strong>\u00a0= s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a\u00a0<strong>val</strong></li><li>\u0110\u1eb7t max = ch\u1ec9 s\u1ed1 l\u1edbn nh\u1ea5t c\u1ee7a m\u1ea3ng S m\u00e0 S(max) kh\u00e1c r\u1ed7ng</li><li>Ta s\u1ebd th\u00eam v\u00e0 x\u00f3a m\u1ed9t s\u1ed1 trong O(1) nh\u01b0 sau:<ul><li>Th\u00eam 1 s\u1ed1\u00a0<strong>v</strong>: X\u00f3a\u00a0<strong>v</strong>\u00a0kh\u1ecfi\u00a0<strong>S(A(v))</strong>. T\u0103ng\u00a0<strong>A(v)</strong>\u00a0th\u00eam 1. Th\u00eam\u00a0<strong>v</strong>\u00a0v\u00e0o\u00a0<strong>S(A(v))</strong>. N\u1ebfu<strong>A(v)</strong>\u00a0&gt;\u00a0<strong>max</strong>, c\u1eadp nh\u1eadt\u00a0<strong>max</strong>.</li><li>X\u00f3a 1 s\u1ed1\u00a0<strong>v</strong>: X\u00f3a\u00a0<strong>v</strong>\u00a0kh\u1ecfi\u00a0<strong>S(A(v))</strong>. Gi\u1ea3m\u00a0<strong>A(v)</strong>\u00a0\u0111i 1. Th\u00eam\u00a0<strong>v</strong>\u00a0v\u00e0o\u00a0<strong>S(A(v))</strong>. N\u1ebfu<strong>S(max)</strong>\u00a0r\u1ed7ng, gi\u1ea3m\u00a0<strong>max</strong>\u00a0\u0111i 1.</li></ul></li><li>V\u00ec t\u1ed5ng c\u00e1c thao t\u00e1c th\u00eam v\u00e0 x\u00f3a khi \u00e1p d\u1ee5ng Mo's Algorithm kh\u00f4ng qu\u00e1<strong>O(N*sqrt(N) + Q*sqrt(N))</strong>, ta thu \u0111\u01b0\u1ee3c m\u1ed9t thu\u1eadt to\u00e1n v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p n\u00e0y.</li></ul><p><strong>\u0110\u1ed9 ph\u1ee9c t\u1ea1p</strong></p><p>Mo's algorithm c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 O(N*sqrt(N) + Q*sqrt(N)). \u0110\u1ec3 hi\u1ec3u t\u1ea1i sao \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n \u0111\u1ea1t \u0111\u01b0\u1ee3c nh\u01b0 v\u1eady, ch\u00fang ta h\u00e3y c\u00f9ng xem vi\u1ec7c di chuy\u1ec3n c\u00e1c \u0111o\u1ea1n [l1,r1] th\u00e0nh [l2,r2]:</p><ul><li>Di chuy\u1ec3n l1 --&gt; l2:<ul><li>N\u1ebfu l1 v\u00e0 l2 c\u00f9ng block: V\u1edbi m\u1ed7i thao t\u00e1c, \u0111\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng qu\u00e1 sqrt(N). Do \u0111\u00f3, \u0111\u1ed9 ph\u1ee9c t\u1ea1p trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y c\u1ee7a c\u1ea3 Q thao t\u00e1c l\u00e0 O(Q*sqrt(N)).</li><li>N\u1ebfu l1 v\u00e0 l2 kh\u00e1c block: V\u00ec ta \u01b0u ti\u00ean sort theo block c\u1ee7a l, n\u00ean tr\u01b0\u1eddng h\u1ee3p n\u00e0y ch\u1ec9 x\u1ea3y ra kh\u00f4ng qu\u00e1 sqrt(N) l\u1ea7n. \u1ede tr\u01b0\u1eddng h\u1ee3p n\u00e0y, ta m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed1i \u0111a l\u00e0 O(N), n\u00ean v\u1edbi t\u1ea5t c\u1ea3 c\u00e1c thao t\u00e1c trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 O(N*sqrt(N)).</li></ul></li><li>Di chuy\u1ec3n r1 --&gt; r2:<ul><li>N\u1ebfu l1 v\u00e0 l2 c\u00f9ng block: V\u00ec ta sort t\u0103ng theo r, n\u00ean v\u1edbi m\u1ed7i block c\u1ee7a l, ta ch\u1ec9 m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng l\u00e0 O(N). Do c\u00f3 sqrt(N) block kh\u00e1c nhau c\u1ee7a l, n\u00ean t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y l\u00e0 O(N*sqrt(N))</li><li>N\u1ebfu l1 v\u00e0 l2 kh\u00e1c block: Nh\u01b0 tr\u00ean \u0111\u00e3 ph\u00e2n t\u00edch, ta ch\u1ec9 c\u00f3 sqrt(N) l\u1ea7n \u0111\u1ed5i block, m\u00f4i l\u1ea7n \u0111\u1ed5i block ta m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p O(N) \u0111\u1ec3 di chuy\u1ec3n r. Do \u0111\u00f3 t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a tr\u01b0\u1eddng h\u1ee3p n\u00e0y l\u00e0 O(N*sqrt(N)).</li></ul></li></ul><p>V\u1eady, \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng l\u00e0 O(N*sqrt(N) + Q*sqrt(N)).</p><p><strong>M\u1edf r\u1ed9ng</strong></p><p>V\u1edbi m\u1ee5c \u0111\u00edch l\u00e0m b\u00e0i to\u00e1n kh\u00f3 h\u01a1n, x\u00e9t b\u00e0i to\u00e1n khi m\u00e0 ch\u00fang ta kh\u00f4ng th\u1ec3 x\u00f3a m\u1ed9t s\u1ed1 kh\u1ecfi CTDL, m\u00e0 ch\u1ec9 c\u00f3 th\u1ec3 th\u00eam (v\u00e0 reverse c\u00e1c thao t\u00e1c n\u00e0y tr\u01b0\u1edbc khi th\u1ef1c hi\u1ec7n b\u1ea5t k\u1ef3 thao t\u00e1c th\u00eam n\u00e0o). M\u1ed9t v\u00ed d\u1ee5 CTDL lo\u1ea1i n\u00e0y l\u00e0 Disjoint set, v\u00e0 vi\u1ec7c x\u1eed l\u00fd truy v\u1ea5n xu\u1ea5t hi\u1ec7n trong b\u00e0i to\u00e1n\u00a0<a href=\"http://www.codechef.com/problems/GERALD07\">Codechef - GERALD07</a>.</p><p>\u00a0</p><p>C\u00e1ch l\u00e0m v\u1eabn l\u00e0 \u00e1p d\u1ee5ng Mo's algorithm, tuy nhi\u00ean v\u00ec kh\u00f4ng th\u1ec3 x\u00f3a ph\u1ea7n t\u1eed, n\u00ean ta kh\u00f4ng th\u1ec3 di chuy\u1ec3n t\u1eeb l1 sang l2 m\u1ed9t c\u00e1ch d\u1ec5 d\u00e0ng \u0111\u01b0\u1ee3c.</p><p>\u00a0</p><p>\u0110\u1ec3 \u0111\u01a1n gi\u1ea3n, ch\u00fang ta ch\u1ec9 x\u00e9t nh\u1eefng truy v\u1ea5n [l, r] m\u00e0 l v\u00e0 r r\u01a1i v\u00e0o 2 block kh\u00e1c nhau. \u0110\u1ec3 gi\u1ea3i quy\u1ebft vi\u1ec7c kh\u00f4ng di chuy\u1ec3n ng\u01b0\u1ee3c \u0111\u01b0\u1ee3c, sau khi tr\u1ea3 l\u1eddi truy v\u1ea5n [l, r], ch\u00fang ta c\u1ea7n reverse c\u00e1c thao t\u00e1c insert t\u1eeb l \u0111\u1ebfn cu\u1ed1i block ch\u1ee9a l. Sau \u0111\u00f3, khi tr\u1ea3 l\u1eddi truy v\u1ea5n [l2, r2], ch\u00fang ta ch\u1ec9 c\u1ea7n th\u1ef1c hi\u1ec7n insert t\u1eeb r+1 \u0111\u1ebfn r2 v\u00e0 t\u1eeb l2 \u0111\u1ebfn cu\u1ed1i block ch\u1ee9a l2.</p><p>\u00a0</p><p>Chi ti\u1ebft c\u00e0i \u0111\u1eb7t:</p><ul><li>G\u1ecdi h\u00e0m snapshot() l\u00e0 ch\u1ee5p l\u1ea1i tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i c\u1ee7a CTDL.</li><li>G\u1ecdi h\u00e0m rollback() l\u00e0 reverse nh\u1eefng thao t\u00e1c insert k\u1ec3 t\u1eeb l\u1ea7n snapshot() cu\u1ed1i c\u00f9ng.</li><li>Ch\u00fang ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t nh\u01b0 sau:</li></ul><pre><code>   rt = sqrt(n)\n   init()  // this initializes our data structure (clears it)\n   snapshot()\n   for all queries q\n       if q.r - q.l + 1 &lt;= rt + 1 // we process light queries\n           for j := q.l to q.r\n               insert(j)\n           store answer for query q\n           rollback()\n   last_bucket = -1\n   for all queries q \n       if q.r - q.l + 1 &lt;= rt + 1: continue\n       bucket = q.l / rt\n\n       if bucket != last_bucket\n           init()\n           l = (bucket + 1) * rt // right border of the bucket\n           r = q.r\n           for j := l to r\n               insert(j)\n       last_bucket = bucket\n\n       while r &lt; q.r \n           insert(++r)\n       snapshot()\n       for j := q.l to l - 1\n           insert(j)\n       store answer for query q\n       rollback()</code></pre><p>\u00a0</p><p>B\u00e0i t\u1eadp \u00e1p d\u1ee5ng:</p><ul><li><a href=\"http://codeforces.com/contest/86/problem/D\">Codeforces Yandex 2011 Round 2 - D</a></li><li><a href=\"http://www.codechef.com/problems/GERALD07\">Codechef - GERALD07</a></li></ul><p>\u00a0</p>", "num_posts": 1, "post": 12, "last_post": 12}, "model": "forum.topic", "pk": 4}, {"fields": {"content": "<p>H\u00f4m nay 11h30 thi Codeforce nh\u00e9!!!</p><ul><li>bla</li><li>bla<ol><li>ok</li><li>abc</li></ol></li></ul><p><strong>hihi</strong></p><p><em>haha</em></p><p><em><span class=\"math-tex\">\\(x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\)</span></em></p><p>@RR</p><p><img alt=\"water heart\" src=\"http://www.somdecristal.com.br/wp-content/uploads/2012/03/heart-drop-water.jpg\" style=\"\"></p>", "updated_by": 1, "created_at": "2015-03-01T09:33:23Z", "reply_on": null, "updated_at": "2015-03-28T20:09:04Z", "created_by": 1, "topic": 1, "num_downvotes": 0, "topic_post": true, "num_upvotes": 0}, "model": "forum.post", "pk": 1}, {"fields": {"content": "comment 1: Ukie con d\u00ea ", "updated_by": 1, "created_at": "2015-03-01T09:37:03Z", "reply_on": 1, "updated_at": "2015-03-01T09:37:03Z", "created_by": 1, "topic": 1, "num_downvotes": 0, "topic_post": false, "num_upvotes": 0}, "model": "forum.post", "pk": 2}, {"fields": {"content": "comment 2: Ch\u1eafc ch\u1eafn ro\u00e0i !!!", "updated_by": 1, "created_at": "2015-03-01T09:37:30Z", "reply_on": 1, "updated_at": "2015-03-01T09:37:39Z", "created_by": 1, "topic": 1, "num_downvotes": 0, "topic_post": false, "num_upvotes": 0}, "model": "forum.post", "pk": 3}, {"fields": {"content": "comment 1-1: \u0110\u1ed3 con d\u00ea !!!", "updated_by": 1, "created_at": "2015-03-01T09:38:32Z", "reply_on": 2, "updated_at": "2015-03-01T09:38:32Z", "created_by": 1, "topic": 1, "num_downvotes": 0, "topic_post": false, "num_upvotes": 0}, "model": "forum.post", "pk": 4}, {"fields": {"content": "<p>B\u00e0i n\u00e0y l\u00e0m th\u1ebf n\u00e0o h\u1ea3 c\u00e1c b\u1ea1n :(</p>\n\n<p><a href=\"http://codeforces.com/contest/519/problem/E\">http://codeforces.com/contest/519/problem/E</a></p>\n\n<pre><code class=\"language-python\">def ok(abc):\n    return 'OK'</code></pre>\n\n<p>\u00a0</p>\n", "updated_by": 2, "created_at": "2015-03-01T09:40:06Z", "reply_on": null, "updated_at": "2015-03-19T18:18:54Z", "created_by": 2, "topic": 2, "num_downvotes": 0, "topic_post": true, "num_upvotes": 0}, "model": "forum.post", "pk": 5}, {"fields": {"content": "comment 1: M\u00ecnh ch\u1ecbu, kh\u00f3 qu\u00e1 :(", "updated_by": 1, "created_at": "2015-03-01T09:40:37Z", "reply_on": 5, "updated_at": "2015-03-01T09:40:47Z", "created_by": 1, "topic": 2, "num_downvotes": 0, "topic_post": false, "num_upvotes": 0}, "model": "forum.post", "pk": 6}, {"fields": {"content": "comment 2: B\u00e0i d\u1ec5 th\u1ebf m\u00e0 c\u0169ng h\u1ecfi, \u0111\u1ed3 con g\u00e0 :3", "updated_by": 1, "created_at": "2015-03-01T09:41:37Z", "reply_on": 5, "updated_at": "2015-03-01T09:42:08Z", "created_by": 1, "topic": 2, "num_downvotes": 0, "topic_post": false, "num_upvotes": 0}, "model": "forum.post", "pk": 7}, {"fields": {"content": "<p><strong>1. M\u1edf \u0111\u1ea7u</strong></p>\n\n<p>Persistent Data Structures l\u00e0 nh\u1eefng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c d\u00f9ng khi ch\u00fang ta c\u1ea7n c\u00f3 \"to\u00e0n b\u1ed9 l\u1ecbch s\u1eed\" c\u1ee7a c\u00e1c thay \u0111\u1ed5i tr\u00ean 1 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u. (Ch\u00fa \u00fd r\u1eb1ng t\u1eeb \"persistent\" c\u00f2n \u0111\u01b0\u1ee3c d\u00f9ng trong \"persistent storage\" v\u1edbi m\u1ed9t ngh\u0129a ho\u00e0n to\u00e0n kh\u00e1c).</p>\n\n<p>X\u00e9t b\u00e0i to\u00e1n v\u00ed d\u1ee5:</p>\n\n<ul>\n\t<li>Cho m\u1ed9t d\u00e3y A g\u1ed3m N ph\u1ea7n t\u1eed.</li>\n\t<li>C\u00f3 2 lo\u1ea1i truy v\u1ea5n:\n\t<ul>\n\t\t<li>Update: G\u00e1n Ai = v</li>\n\t\t<li>Query: T\u00ecm min(Ai, ..., Aj) t\u1ea1i th\u1eddi \u0111i\u1ec3m sau ph\u00e9p g\u00e1n th\u1ee9 K.</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>N\u1ebfu kh\u00f4ng c\u00f3 \u0111o\u1ea1n \"t\u1ea1i th\u1eddi \u0111i\u1ec3m sau ph\u00e9p g\u00e1n th\u1ee9 K\", b\u00e0i to\u00e1n l\u00e0 1 b\u00e0i c\u01a1 b\u1ea3n tr\u00ean Interval Tree (Segment Tree). \u0110o\u1ea1n \"t\u1ea1i th\u1eddi \u0111i\u1ec3m sau ph\u00e9p g\u00e1n th\u1ee9 K\" bu\u1ed9c ch\u00fang ta ph\u1ea3i l\u01b0u l\u1ea1i c\u00e1c th\u00f4ng tin v\u1ec1 l\u1ecbch s\u1eed c\u1eadp nh\u1eadt CTDL - \u0111\u00e2y ch\u00ednh l\u00e0 t\u01b0 t\u01b0\u1edfng c\u1ee7a Persistent Data Structures.</p>\n\n<p>G\u1ecdi tr\u1ea1ng th\u00e1i c\u1ee7a CTDL t\u1ea1i m\u1ed9t th\u1eddi \u0111i\u1ec3m l\u00e0 1 version c\u1ee7a CTDL \u0111\u00f3. M\u1ed9t c\u00e1ch c\u1ee5 th\u1ec3 h\u01a1n, persistent data structures cho ph\u00e9p ch\u00fang ta:</p>\n\n<ul>\n\t<li>Truy v\u1ea5n tr\u00ean m\u1ed9t version c\u0169 c\u1ee7a CTDL</li>\n\t<li>C\u1eadp nh\u1eadt d\u1eef li\u1ec7u trong version m\u1edbi nh\u1ea5t c\u1ee7a CTDL, b\u1eb1ng c\u00e1ch t\u1ea1o th\u00eam 1 version m\u1edbi c\u1ee7a CTDL.\n\t<ul>\n\t\t<li>Trong m\u1ed9t s\u1ed1 c\u00e1ch c\u00e0i \u0111\u1eb7t, Persistent Data Structures c\u00f2n c\u00f3 th\u1ec3 cho ph\u00e9p thay version hi\u1ec7n t\u1ea1i c\u1ee7a CTDL th\u00e0nh m\u1ed9t version trong qu\u00e1 kh\u1ee9 (ph\u1ea7n 2 m\u00f4 t\u1ea3 ph\u01b0\u01a1ng ph\u00e1p c\u00e0i \u0111\u1eb7t c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n \u0111\u01b0\u1ee3c thao t\u00e1c n\u00e0y).</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>C\u1ea7n hi\u1ec3u r\u1eb1ng Persistent Data Structures kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t lo\u1ea1i CTDL m\u1edbi. N\u00f3 l\u00e0 m\u1ed9t s\u1ed1 k\u0129 n\u0103ng t\u1ed5ng qu\u00e1t gi\u00fap th\u00eam th\u00f4ng tin v\u1ec1 l\u1ecbch s\u1eed thay \u0111\u1ed5i v\u00e0o CTDL th\u00f4ng th\u01b0\u1eddng\u00a0<strong>m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3</strong>. V\u00ed d\u1ee5:</p>\n\n<ul>\n\t<li>IT + Persistent trick --&gt; Persistent IT</li>\n\t<li>BIT + Persistent trick --&gt; Persistent BIT</li>\n</ul>\n\n<p>T\u1ea1i sao l\u1ea1i l\u00e0 \"m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3\"? B\u1edfi v\u00ec ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 c\u00f3 m\u1ed9t Persistent Data Structures b\u1eb1ng c\u00e1ch: khi c\u1eadp nh\u1eadt, ta t\u1ea1o m\u1ed9t b\u1ea3n sao ho\u00e0n to\u00e0n m\u1edbi c\u1ee7a CTDL, thay \u0111\u1ed5i m\u1ed9t s\u1ed1 d\u1eef li\u1ec7u tr\u00ean n\u00f3 v\u00e0 l\u01b0u l\u1ea1i. Nh\u01b0 v\u1eady ta lu\u00f4n c\u00f3 \u0111\u01b0\u1ee3c m\u1ed9t thu\u1eadt to\u00e1n v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p O(Q*N*T) v\u00e0 b\u1ed9 nh\u1edb O(Q*N), v\u1edbi Q l\u00e0 s\u1ed1 thao t\u00e1c c\u1ea7n th\u1ef1c hi\u1ec7n, v\u00e0 N l\u00e0 \u0111\u1ed9 l\u1edbn c\u1ee7a CTDL, v\u00e0 T l\u00e0 th\u1eddi gian \u0111\u1ec3 th\u1ef1c hi\u1ec7n thao t\u00e1c tr\u00ean CTDL.</p>\n\n<p>Trong c\u00e1c ph\u1ea7n d\u01b0\u1edbi \u0111\u00e2y, m\u00ecnh s\u1ebd tr\u00ecnh b\u00e0y v\u1ec1 2 k\u0129 thu\u1eadt th\u00f4ng th\u01b0\u1eddng c\u1ee7a Persistent Data Structures:</p>\n\n<ul>\n</ul>\n\n<ul>\n</ul>\n", "updated_by": 1, "created_at": "2015-03-21T08:25:45Z", "reply_on": null, "updated_at": "2015-03-21T08:28:54Z", "created_by": 1, "topic": 3, "num_downvotes": 0, "topic_post": true, "num_upvotes": 0}, "model": "forum.post", "pk": 8}, {"fields": {"content": "<p><strong>2. Persistent IT</strong></p><p><strong>T\u01b0 t\u01b0\u1edfng:</strong></p><p>Quay tr\u1edf l\u1ea1i b\u00e0i to\u00e1n. Ch\u00fang ta bi\u1ebft r\u1eb1ng m\u1ed7i thao t\u00e1c update tr\u00ean IT ch\u1ec9 m\u1ea5t O(logN). \u0110i\u1ec1u n\u00e0y t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi vi\u1ec7c m\u1ed7i thao t\u00e1c update ch\u1ec9 l\u00e0m thay \u0111\u1ed5i O(logN) n\u00fat tr\u00ean c\u00e2y. Nh\u01b0 v\u1eady ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 l\u01b0u l\u1ea1i t\u1ea5t c\u1ea3 c\u00e1c thay \u0111\u1ed5i tr\u00ean t\u1ea5t c\u1ea3 c\u00e1c n\u00fat trong O(Q*logN).</p><p>\u00a0</p><p>T\u1eeb \u0111\u00f3, ta r\u00fat ra \u0111\u01b0\u1ee3c m\u1ed9t t\u01b0 t\u01b0\u1edfng c\u00e0i \u0111\u1eb7t thu\u1eadt to\u00e1n:</p><ul><li>V\u1edbi m\u1ed7i thao t\u00e1c Update, ta t\u1ea1o th\u00eam m\u1ed9t s\u1ed1 n\u00fat m\u1edbi tr\u00ean IT. \u0110\u1ec3 kh\u00f4ng ph\u1ea3i sinh th\u00eam c\u00e1c n\u00fat kh\u00f4ng b\u1ecb thay \u0111\u1ed5i, m\u1ed9t n\u00fat \u1edf version m\u1edbi c\u00f3 th\u1ec3 c\u00f3 con l\u00e0 m\u1ed9t n\u00fat \u1edf vesion c\u0169.<ul><li>Ch\u00fa \u00fd: M\u1ed7i thao t\u00e1c Update lu\u00f4n thay \u0111\u1ed5i m\u1ed9t \u0111\u01b0\u1eddng \u0111i t\u1eeb g\u1ed1c \u0111\u1ebfn m\u1ed9t n\u00fat l\u00e1, n\u00ean kh\u00f4ng c\u00f3 tr\u01b0\u1eddng h\u1ee3p m\u1ed9t n\u00fat \u1edf version c\u0169 c\u00f3 con l\u00e0 m\u1ed9t n\u00fat \u1edf version m\u1edbi h\u01a1n. (N\u1ebfu thao t\u00e1c Update l\u00e0 Update 1 \u0111o\u1ea1n, c\u00e1c n\u00fat b\u1ecb thay \u0111\u1ed5i kh\u00f4ng c\u00f2n l\u00e0 m\u1ed9t \u0111\u01b0\u1eddng \u0111i n\u1eefa, nh\u01b0ng nh\u1eadn x\u00e9t n\u00e0y v\u1eabn \u0111\u00fang).</li></ul></li><li>Khi th\u1ef1c hi\u1ec7n thao t\u00e1c Query tr\u00ean version t, ta ch\u1ec9 c\u1ea7n th\u1ef1c hi\u1ec7n Query tr\u00ean n\u00fat g\u1ed1c \u1edf version t.</li></ul><p>T\u01b0 t\u01b0\u1edfng n\u00e0y c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0\u00a0<strong>Path Copy</strong>\u00a0trong c\u00e1c t\u00e0i li\u1ec7u ti\u1ebfng Anh.</p><p>\u00a0</p><p><strong>C\u00e0i \u0111\u1eb7t:\u00a0</strong></p><p>Xem file \u0111\u00ednh k\u00e8m persistentIT.cpp</p><ul><li>Ban \u0111\u1ea7u, ta c\u00f3 m\u1ed9t m\u1ea3ng\u00a0<strong>it</strong>, l\u01b0u t\u1ea5t c\u1ea3 c\u00e1c n\u00fat s\u1ebd \u0111\u01b0\u1ee3c sinh ra c\u1ee7a IT. M\u1ed7i n\u00fat g\u1ed3m c\u00f3<ul><li>Index c\u1ee7a con tr\u00e1i, index c\u1ee7a con ph\u1ea3i (2 bi\u1ebfn\u00a0<strong>left</strong>\u00a0v\u00e0\u00a0<strong>right</strong>)</li><li>Gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t c\u1ee7a c\u00e1c s\u1ed1 trong kho\u1ea3ng m\u00e0 n\u00fat qu\u1ea3n l\u00fd (\u1edf version khi n\u00fat \u0111\u00f3 \u0111\u01b0\u1ee3c t\u1ea1o ra): bi\u1ebfn\u00a0<strong>ln</strong></li></ul></li><li>Ta l\u01b0u th\u00eam index c\u1ee7a c\u00e1c n\u00fat g\u1ed1c \u1edf c\u00e1c version kh\u00e1c nhau v\u00e0o m\u1ed9t m\u1ea3ng\u00a0<strong>ver</strong></li><li>H\u00e0m\u00a0<strong>update</strong>:<ul><li>T\u1ea1o ra c\u00e1c n\u00fat m\u1edbi, v\u00e0 tr\u1ecf \u0111\u1ebfn c\u00e1c con \u1edf version c\u0169 ho\u1eb7c version m\u1edbi, t\u00f9y theo c\u00e1c con c\u00f3 b\u1ecb thay \u0111\u1ed5i hay kh\u00f4ng</li><li>Tr\u1ea3 l\u1ea1i index c\u1ee7a n\u00fat m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o</li></ul></li><li>H\u00e0m\u00a0<strong>get:</strong><ul><li>Tr\u1ea3 l\u1ea1i min c\u1ee7a m\u1ed9t \u0111o\u1ea1n \u0111\u01b0\u1ee3c qu\u1ea3n l\u00fd b\u1edfi n\u00fat\u00a0<strong>nodeId</strong></li></ul></li></ul><p>\u00a0</p><p><strong>Ph\u00e2n t\u00edch:</strong></p><ul><li>C\u00e1ch c\u00e0i \u0111\u1eb7t Persistent Data Structures trong m\u1ee5c n\u00e0y r\u1ea5t hi\u1ec7u qu\u1ea3. N\u00f3 ho\u00e0n to\u00e0n kh\u00f4ng l\u00e0m t\u0103ng th\u00eam \u0111\u1ed9 ph\u1ee9c t\u1ea1p (persistent IT c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p m\u1ed7i thao t\u00e1c l\u00e0 O(logN)), v\u00e0 b\u1ed9 nh\u1edb c\u1ea7n th\u00eam l\u00e0 t\u1ed1i \u01b0u: O(Q*logN).</li><li>Tuy nhi\u00ean, c\u00e1ch c\u00e0i \u0111\u1eb7t n\u00e0y kh\u00f4ng d\u1ec5 \u00e1p d\u1ee5ng v\u1edbi nh\u1eefng CTDL kh\u00e1c. Ch\u1eb3ng h\u1ea1n s\u1ebd r\u1ea5t kh\u00f3 \u0111\u1ec3 c\u00e0i \u0111\u00fang BIT v\u1edbi ph\u01b0\u01a1ng ph\u00e1p n\u00e0y. \u1ede m\u1ee5c ti\u1ebfp theo, m\u00ecnh s\u1ebd tr\u00ecnh b\u00e0y m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p c\u00e0i \u0111\u1eb7t kh\u00e1c c\u00f3 th\u1ec3 d\u00f9ng cho BIT, tuy nhi\u00ean c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u1edbn h\u01a1n.</li></ul>", "updated_by": 1, "created_at": "2015-03-28T20:11:54Z", "reply_on": 8, "updated_at": "2015-03-28T20:11:54Z", "created_by": 1, "topic": 3, "num_downvotes": 0, "topic_post": false, "num_upvotes": 0}, "model": "forum.post", "pk": 9}, {"fields": {"content": "<p><strong>3. Persistent BIT</strong></p><p><strong>T\u01b0 t\u01b0\u1edfng:</strong></p><p>T\u1ea1i m\u1ed7i n\u00fat c\u1ee7a BIT, thay v\u00ec l\u01b0u m\u1ed9t gi\u00e1 tr\u1ecb, ta l\u01b0u l\u1ea1i t\u1ea5t c\u1ea3 c\u00e1c c\u1eb7p (version, gi\u00e1 tr\u1ecb) \u1edf n\u00fat \u0111\u00f3.</p><ul><li>Thao t\u00e1c update r\u1ea5t \u0111\u01a1n gi\u1ea3n: ch\u1ec9 c\u1ea7n th\u00eam m\u1ed9t c\u1eb7p (version, gi\u00e1 tr\u1ecb) v\u00e0o c\u00e1c n\u00fat t\u01b0\u01a1ng \u1ee9ng.</li><li>V\u1edbi thao t\u00e1c query t\u1ea1i version t, tr\u00ean m\u1ed9t n\u00fat, ta c\u1ea7n t\u00ecm c\u1eb7p (version, gi\u00e1 tr\u1ecb) m\u1edbi nh\u1ea5t v\u00e0o tr\u01b0\u1edbc th\u1eddi \u0111i\u1ec3m t - vi\u1ec7c t\u00ecm ki\u1ebfm n\u00e0y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n b\u1eb1ng t\u00ecm ki\u1ebfm nh\u1ecb ph\u00e2n.</li></ul><p>C\u00e1ch c\u00e0i \u0111\u1eb7t n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0\u00a0<strong>Fat Node</strong>\u00a0trong c\u00e1c t\u00e0i li\u1ec7u ti\u1ebfng Anh.</p><p>\u00a0</p><p><strong>C\u00e0i \u0111\u1eb7t:</strong></p><p>Code BIT tr\u00edch t\u1eeb b\u00e0i IPSC 2011 - Grid Surveillance: Xem file \u0111\u00ednh k\u00e8m Persistent_BIT.cpp</p><p>\u00a0</p><p><strong>Ph\u00e2n t\u00edch:</strong></p><ul><li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p cho m\u1ed7i thao t\u00e1c update kh\u00f4ng thay \u0111\u1ed5i (v\u00ed d\u1ee5 v\u1edbi BIT, v\u1eabn l\u00e0 O(logN)). Nh\u01b0ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho m\u1ed7i thao t\u00e1c query b\u1ecb t\u0103ng l\u00ean logN (v\u00ed d\u1ee5 v\u1edbi BIT, \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho m\u1ed7i thao t\u00e1c l\u00e0 O(log^2(N)) thay v\u00ec O(logN).</li><li>Tuy nhi\u00ean, c\u00e1ch c\u00e0i \u0111\u1eb7t n\u00e0y t\u1ed5ng qu\u00e1t h\u01a1n, d\u1ec5 d\u00e0ng \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng cho nhi\u1ec1u CTDL kh\u00e1c nhau, v\u00ed d\u1ee5 c\u1ea3 BIT v\u00e0 IT.</li></ul>", "updated_by": 1, "created_at": "2015-03-28T20:12:21Z", "reply_on": 8, "updated_at": "2015-03-28T20:12:21Z", "created_by": 1, "topic": 3, "num_downvotes": 0, "topic_post": false, "num_upvotes": 0}, "model": "forum.post", "pk": 10}, {"fields": {"content": "<p><strong>4. Retroactive Data Structures</strong></p><p>M\u1ed9t l\u1edbp CTDL kh\u00e1c t\u01b0\u01a1ng \u0111\u1ed1i gi\u1ed1ng v\u1edbi Persistent Data Structures, nh\u01b0ng c\u00f3 t\u00ednh \u1ee9ng d\u1ee5ng th\u1ef1c t\u1ebf cao h\u01a1n l\u00e0 Retroactive Data Structures:</p><p>\u00a0</p><p>\"Retroactive Data Structures l\u00e0 lo\u1ea1i CTDL cho ph\u00e9p th\u1ef1c hi\u1ec7n thay \u0111\u1ed5i v\u1edbi m\u1ed9t d\u00e3y c\u00e1c thao t\u00e1c \u0111\u00e3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n tr\u00ean d\u1eef li\u1ec7u. V\u00ed d\u1ee5: Thay \u0111\u1ed5i m\u1ed9t thao t\u00e1c \u0111\u00e3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n trong qu\u00e1 kh\u1ee9\".</p><p>\u00a0</p><p>C\u1ea3 Retroactive Data Structures &amp; Persistent Data Structures \u0111\u1ec1u quan t\u00e2m \u0111\u1ebfn tr\u1ee5c th\u1eddi gian, tuy nhi\u00ean \u0111i\u1ec3m kh\u00e1c nhau n\u1eb1m \u1edf ch\u1ed7 c\u00e1ch x\u1eed l\u00fd tr\u1ee5c th\u1eddi gian c\u1ee7a 2 CTDL n\u00e0y nh\u01b0 th\u1ebf n\u00e0o:</p><ul><li>V\u1edbi Persistent Data Structures, t\u1ea5t c\u1ea3 c\u00e1c version \u0111\u01b0\u1ee3c l\u01b0u l\u1ea1i, v\u00e0 b\u1ea1n kh\u00f4ng th\u1ec3 n\u00e0o thay \u0111\u1ed5i m\u1ed9t version trong qu\u00e1 kh\u1ee9 (\u0111i\u1ec1u duy nh\u1ea5t b\u1ea1n c\u00f3 th\u1ec3 l\u00e0m l\u00e0 t\u1ea1o ra m\u1ed9t version m\u1edbi t\u1eeb 1 version c\u0169 v\u00e0 th\u1ef1c hi\u1ec7n thay \u0111\u1ed5i tr\u00ean version m\u1edbi n\u00e0y).</li><li>V\u1edbi Retroactive Data Structures, b\u1ea1n c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n thay \u0111\u1ed5i tr\u00ean m\u1ed9t version c\u0169. Thay \u0111\u1ed5i tr\u00ean m\u1ed9t version c\u0169 n\u00e0y \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn t\u1ea5t c\u1ea3 c\u00e1c version sau n\u00f3.</li></ul><p>B\u1ea1n c\u00f3 th\u1ec3 h\u00ecnh dung 2 kh\u00e1i ni\u1ec7m n\u00e0y nh\u01b0 2 c\u00e1ch hi\u1ec3u kh\u00e1c nhau v\u1ec1 time travel:</p><ul><li>Persistent Data Structures: B\u1ea1n kh\u00f4ng th\u1ec3 thay \u0111\u1ed5i qu\u00e1 kh\u1ee9. Khi b\u1ea1n \u0111i ng\u01b0\u1ee3c v\u1ec1 qu\u00e1 kh\u1ee9, b\u1ea1n b\u01b0\u1edbc sang m\u1ed9t parallel world, v\u00e0 t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec1u b\u1ea1n l\u00e0m kh\u00f4ng \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn tr\u1ee5c th\u1eddi gian m\u00e0 b\u1ea1n xu\u1ea5t ph\u00e1t. Parallel world n\u00e0y ch\u1ecbu \u1ea3nh h\u01b0\u1edfng c\u1ee7a nh\u1eefng vi\u1ec7c b\u1ea1n l\u00e0m \u1edf \u0111\u00e2y, nh\u01b0ng 2 th\u1ebf gi\u1edbi ho\u00e0n to\u00e0n kh\u00f4ng li\u00ean quan \u0111\u1ebfn nhau. Gi\u1ea3 s\u1eed ng\u01b0\u1eddi y\u00eau c\u1ee7a b\u1ea1n r\u1eddi xa b\u1ea1n, v\u00e0 b\u1ea1n tr\u1edf v\u1ec1 qu\u00e1 kh\u1ee9 \u0111\u1ec3 thay \u0111\u1ed5i \u0111i\u1ec1u \u0111\u00f3 (v\u00e0 th\u00e0nh c\u00f4ng). L\u00fac n\u00e0y c\u00f3 2 th\u1ebf gi\u1edbi, 1 th\u1ebf gi\u1edbi m\u00e0 2 b\u1ea1n \u1edf b\u00ean nhau, v\u00e0 1 th\u1ebf gi\u1edbi m\u00e0 2 b\u1ea1n kh\u00f4ng \u1edf b\u00ean nhau. C\u1ea3 2 th\u1ebf gi\u1edbi \u0111\u1ec1u t\u1ed3n t\u1ea1i v\u00e0 kh\u00f4ng li\u00ean quan \u0111\u1ebfn nhau.</li><li>Retroactive Data Structures: Khi b\u1ea1n thay \u0111\u1ed5i qu\u00e1 kh\u1ee9 v\u00e0 nh\u1eefng thay \u0111\u1ed5i \u0111\u00f3 \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn hi\u1ec7n t\u1ea1i. \u0110\u00e2y l\u00e0 tr\u01b0\u1eddng h\u1ee3p m\u00e0 time travel tr\u1edf n\u00ean th\u00fa v\u1ecb, b\u1edfi b\u1ea1n c\u00f3 th\u1ec3 t\u1ea1o n\u00ean nh\u1eefng ngh\u1ecbch l\u00fd: Ch\u1eb3ng h\u1ea1n b\u1ea1n tr\u1edf v\u1ec1 qu\u00e1 kh\u1ee9 v\u00e0 ng\u0103n c\u1ea3n b\u1ed1 m\u1eb9 b\u1ea1n l\u1ea5y nhau --&gt; B\u1ea1n kh\u00f4ng th\u1ec3 ra \u0111\u1eddi --&gt; kh\u00f4ng th\u1ec3 quay tr\u1edf v\u1ec1 qu\u00e1 kh\u1ee9...</li></ul><p>S\u1ef1 kh\u00e1c bi\u1ec7t v\u1ec1 c\u00e1ch x\u1eed l\u00fd tr\u1ee5c th\u1eddi gian khi\u1ebfn cho Retroactive Data Structures c\u00f3 r\u1ea5t nhi\u1ec1u \u1ee9ng d\u1ee5ng tr\u00ean th\u1ef1c t\u1ebf - tr\u00e1i ng\u01b0\u1ee3c h\u1eb3n v\u1edbi Persistent Data Structures ch\u1ec9 th\u01b0\u1eddng \u0111\u01b0\u1ee3c th\u1ea5y \u1edf trong c\u00e1c k\u1ef3 thi. M\u1ed9t v\u00e0i \u1ee9ng d\u1ee5ng quan tr\u1ecdng c\u1ee7a Retroactive Data Structures g\u1ed3m c\u00f3:</p><ul><li>Error Correction: Gi\u1ea3 s\u1eed m\u1ed9t d\u1eef li\u1ec7u b\u1ecb nh\u1eadp sai, l\u00e0m \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn t\u1ea5t c\u1ea3 c\u00e1c thao t\u00e1c sau \u0111\u1ea5y. Retroactive DS cho ph\u00e9p s\u1eeda d\u1eef li\u1ec7u nh\u1eadp sai v\u00e0 \u1ea3nh h\u01b0\u1edfng (t\u00edch c\u1ef1c) \u0111\u1ebfn t\u1ea5t c\u1ea3 c\u00e1c thao t\u00e1c sau \u0111\u00f3.</li><li>Bad data: G\u1ea7n gi\u1ed1ng v\u1edbi Error Correction, nh\u01b0ng d\u1eef li\u1ec7u sai b\u1ecb x\u00f3a \u0111i thay v\u00ec \u0111\u01b0\u1ee3c s\u1eeda l\u1ea1i.</li><li>Recovery: Gi\u1ea3 s\u1eed m\u1ed9t l\u1ed7i c\u1ee7a ph\u1ea7n c\u1ee9ng l\u00e0m m\u1ed9t s\u1ed1 d\u1eef li\u1ec7u kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u1ecdc. Retroactive DS cho ph\u00e9p \u0111\u1ecdc l\u1ea1i nh\u1eefng d\u1eef li\u1ec7u n\u00e0y v\u00e0 thay \u0111\u1ed5i t\u1ea5t c\u1ea3 c\u00e1c thao t\u00e1c \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n sau \u0111\u00f3.</li></ul><p>Tr\u00ean th\u1ef1c t\u1ebf, Retroactive Data Structures c\u00f2n \u0111ang d\u1eebng l\u1ea1i \u1edf vi\u1ec7c l\u00e0 m\u1ed9t kh\u00e1i ni\u1ec7m, ch\u1ee9 ch\u01b0a c\u00f3 m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p c\u00e0i \u0111\u1eb7t n\u00e0o hi\u1ec7u qu\u1ea3. C\u00e1c b\u1ea1n n\u1ebfu mu\u1ed1n t\u00ecm hi\u1ec3u c\u00f3 th\u1ec3 nghi\u00ean c\u1ee9u th\u00eam v\u1ec1 c\u01a1 ch\u1ebf rollback trong database ho\u1eb7c t\u00ecm ki\u1ebfm th\u00eam v\u1ec1 Retroactive Data Structures.</p><p>B\u00e0i t\u1eadp \u00e1p d\u1ee5ng</p><ul><li><a href=\"http://www.spoj.com/problems/MKTHNUM/\">SPOJ - MKTHNUM</a></li><li><a href=\"http://ipsc.ksp.sk/2011/real/problems/g.html\">IPSC 2011 - Grid Surveillance</a></li></ul>", "updated_by": 1, "created_at": "2015-03-28T20:12:41Z", "reply_on": 8, "updated_at": "2015-03-28T20:12:41Z", "created_by": 1, "topic": 3, "num_downvotes": 0, "topic_post": false, "num_upvotes": 0}, "model": "forum.post", "pk": 11}, {"fields": {"content": "<p><strong>B\u00e0i to\u00e1n:</strong></p><p>Cho m\u1ed9t d\u00e3y s\u1ed1 A g\u1ed3m N ph\u1ea7n t\u1eed. C\u1ea7n th\u1ef1c hi\u1ec7n Q truy v\u1ea5n, m\u1ed7i truy v\u1ea5n (i, j) y\u00eau c\u1ea7u t\u00ecm mode(Ai, ..., Aj). (Mode l\u00e0 gi\u00e1 tr\u1ecb xu\u1ea5t hi\u1ec7n nhi\u1ec1u l\u1ea7n nh\u1ea5t). Gi\u1edbi h\u1ea1n: N, Q, Ai &lt;= 10^5.</p><p>\u00a0</p><p>Khi \u0111\u1ecdc \u0111\u1ec1 m\u1ed9t b\u00e0i to\u00e1n truy v\u1ea5n ki\u1ec3u n\u00e0y, c\u00f3 l\u1ebd CTDL \u0111\u1ea7u ti\u00ean m\u00e0 c\u00e1c b\u1ea1n ngh\u0129 \u0111\u1ebfn l\u00e0 Interval Tree. Nh\u01b0ng c\u00f3 \u0111i\u1ec1u g\u00ec \u0111\u00f3 kh\u00f4ng \u1ed5n trong b\u00e0i n\u00e0y: Khi c\u00f3 th\u00f4ng tin c\u1ee7a 2 n\u00fat con [l, mid] v\u00e0 [mid+1, r], r\u1ea5t kh\u00f3 \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c b\u1ea5t k\u1ef3 th\u00f4ng tin h\u1eefu \u00edch n\u00e0o c\u1ee7a [l, r].</p><p><strong>Mo's Algorithm:</strong></p><p>\u0110i\u1ec3m \u0111\u1eb7c bi\u1ec7t c\u1ee7a h\u00e0m mode ch\u1eafc ch\u1eafn s\u1ebd khi\u1ebfn cho b\u1ea1n c\u00e0ng ng\u00e0y c\u00e0ng tr\u1edf n\u00ean tuy\u1ec7t v\u1ecdng n\u1ebfu c\u00e0ng c\u1ed1 ngh\u0129 v\u1ec1 c\u00e1ch ti\u1ebfp c\u1eadn n\u00f3. L\u00fac n\u00e0y, b\u1ea1n c\u1ea7n nh\u1edb \u0111\u1ebfn c\u00e2u n\u00f3i n\u1ed5i ti\u1ebfng c\u1ee7a RR: \"L\u00fac tuy\u1ec7t v\u1ecdng, h\u00e3y duy\u1ec7t\".</p><p>\u00a0</p><p>V\u1eady duy\u1ec7t nh\u01b0 th\u1ebf n\u00e0o?</p><ul><li>V\u1edbi m\u1ed7i truy v\u1ea5n, ta for t\u1eeb tr\u00e1i sang ph\u1ea3i, \u0111\u1ebfm s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n, t\u1eeb \u0111\u00f3 t\u00ecm \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3.</li></ul><p>Ti\u1ebfp t\u1ee5c ch\u00e0y c\u1ed1i v\u1edbi ph\u01b0\u01a1ng ph\u00e1p duy\u1ec7t, b\u1ea1n s\u1ebd nh\u1eadn ra c\u00f3 r\u1ea5t nhi\u1ec1u c\u00e1ch \u0111\u1ec3 c\u1ea3i ti\u1ebfn n\u00f3:</p><ul><li>\u0110\u1ec3 tr\u00e1nh ph\u1ea3i kh\u1edfi t\u1ea1o l\u1ea1i m\u1ea3ng \u0111\u1ebfm (hi\u1ec3n nhi\u00ean \u0111i\u1ec1u n\u00e0y r\u1ea5t t\u1ed1n th\u1eddi gian), sau khi tr\u1ea3 l\u1eddi truy v\u1ea5n [l1, r1], \u0111\u1ec3 tr\u1ea3 l\u1eddi truy v\u1ea5n [l2, r2], b\u1ea1n ch\u1ec9 c\u1ea7n c\u1ed9ng tr\u1eeb m\u1ea3ng \u0111\u1ebfm. C\u1ee5 th\u1ec3:<ul><li>N\u1ebfu l2 &gt; l1, gi\u1ea3m s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a A(l1), ..., A(l2-1)</li><li>N\u1ebfu l2 &lt; l1, t\u0103ng s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a A(l2), ..., A(l1-1)</li><li>T\u01b0\u01a1ng t\u1ef1 v\u1edbi r1 v\u00e0 r2.</li></ul></li><li>\u0110\u1ec3 c\u1eadp nh\u1eadt s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n l\u1edbn nh\u1ea5t th\u00ec c\u00f3 th\u1ec3 d\u00f9ng th\u00eam set.</li></ul><p>Khi c\u1ea3i ti\u1ebfn \u0111\u1ebfn b\u01b0\u1edbc n\u00e0y, c\u00f4ng vi\u1ec7c t\u1ed1n th\u1eddi gian nh\u1ea5t c\u00f2n l\u1ea1i l\u00e0 t\u0103ng gi\u1ea3m s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n. Do \u0111\u00f3, ch\u00fang ta c\u1ea7n sort c\u00e1c truy v\u1ea5n theo m\u1ed9t th\u1ee9 t\u1ef1 h\u1ee3p l\u00fd h\u01a1n, sao cho c\u00e1c truy v\u1ea5n \"gi\u1ed1ng gi\u1ed1ng\" nhau \u1edf g\u1ea7n nhau h\u01a1n.</p><p>\u00a0</p><p>\u0110\u1ebfn \u0111\u00e2y, b\u1ea1n \u0111\u00e3 t\u00ecm \u0111\u01b0\u1ee3c Mo's algorithm. Mo's algorithm l\u00e0 ph\u01b0\u01a1ng ph\u00e1p sort c\u00e1c truy v\u1ea5n l\u1ea1i, sao cho t\u1ed5ng th\u1eddi gian th\u1ef1c hi\u1ec7n vi\u1ec7c di chuy\u1ec3n gi\u1eefa c\u00e1c truy v\u1ea5n kh\u00f4ng qu\u00e1<strong>O(N*sqrt(N) + Q*sqrt(N))</strong>. (\"Di chuy\u1ec3n\" gi\u1eefa c\u00e1c truy v\u1ea5n ch\u00ednh l\u00e0 thao t\u00e1c \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a \u1edf tr\u00ean)</p><pre><code>S = the max integer number which is less than sqrt(N);\nbool cmp(Query A, Query B)\n{\n  if (A.l / S \uff01= B.l / S) return A.l / S &lt; B.l / S;\n  return A.r &lt; B.r\n}</code></pre><p>\u00a0</p><p>S\u1eed d\u1ee5ng Mo's Algorithm, b\u1ea1n \u0111\u00e3 c\u00f3 th\u1ec3 thu \u0111\u01b0\u1ee3c m\u1ed9t thu\u1eadt to\u00e1n ho\u00e0n ch\u1ec9nh cho b\u00e0i n\u00e0y v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p\u00a0<strong>O(N*sqrt(N) + Q*sqrt(N))</strong>:</p><ul><li>Sort t\u1ea5t c\u1ea3 c\u00e1c truy v\u1ea5n theo Mo's Algorithm</li><li>G\u1ecdi\u00a0<strong>S(N)</strong>\u00a0l\u00e0 m\u1ed9t m\u1ea3ng g\u1ed3m\u00a0<strong>N</strong>\u00a0set (c\u00f3 th\u1ec3 c\u00e0i b\u1eb1ng hash table \u0111\u1ec3 gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p).<strong>S(i)</strong>\u00a0ch\u1ee9a t\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 xu\u1ea5t hi\u1ec7n \u0111\u00fang\u00a0<strong>i</strong>\u00a0l\u1ea7n.</li><li>G\u1ecdi\u00a0<strong>A(val)</strong>\u00a0= s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a\u00a0<strong>val</strong></li><li>\u0110\u1eb7t max = ch\u1ec9 s\u1ed1 l\u1edbn nh\u1ea5t c\u1ee7a m\u1ea3ng S m\u00e0 S(max) kh\u00e1c r\u1ed7ng</li><li>Ta s\u1ebd th\u00eam v\u00e0 x\u00f3a m\u1ed9t s\u1ed1 trong O(1) nh\u01b0 sau:<ul><li>Th\u00eam 1 s\u1ed1\u00a0<strong>v</strong>: X\u00f3a\u00a0<strong>v</strong>\u00a0kh\u1ecfi\u00a0<strong>S(A(v))</strong>. T\u0103ng\u00a0<strong>A(v)</strong>\u00a0th\u00eam 1. Th\u00eam\u00a0<strong>v</strong>\u00a0v\u00e0o\u00a0<strong>S(A(v))</strong>. N\u1ebfu<strong>A(v)</strong>\u00a0&gt;\u00a0<strong>max</strong>, c\u1eadp nh\u1eadt\u00a0<strong>max</strong>.</li><li>X\u00f3a 1 s\u1ed1\u00a0<strong>v</strong>: X\u00f3a\u00a0<strong>v</strong>\u00a0kh\u1ecfi\u00a0<strong>S(A(v))</strong>. Gi\u1ea3m\u00a0<strong>A(v)</strong>\u00a0\u0111i 1. Th\u00eam\u00a0<strong>v</strong>\u00a0v\u00e0o\u00a0<strong>S(A(v))</strong>. N\u1ebfu<strong>S(max)</strong>\u00a0r\u1ed7ng, gi\u1ea3m\u00a0<strong>max</strong>\u00a0\u0111i 1.</li></ul></li><li>V\u00ec t\u1ed5ng c\u00e1c thao t\u00e1c th\u00eam v\u00e0 x\u00f3a khi \u00e1p d\u1ee5ng Mo's Algorithm kh\u00f4ng qu\u00e1<strong>O(N*sqrt(N) + Q*sqrt(N))</strong>, ta thu \u0111\u01b0\u1ee3c m\u1ed9t thu\u1eadt to\u00e1n v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p n\u00e0y.</li></ul><p><strong>\u0110\u1ed9 ph\u1ee9c t\u1ea1p</strong></p><p>Mo's algorithm c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 O(N*sqrt(N) + Q*sqrt(N)). \u0110\u1ec3 hi\u1ec3u t\u1ea1i sao \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n \u0111\u1ea1t \u0111\u01b0\u1ee3c nh\u01b0 v\u1eady, ch\u00fang ta h\u00e3y c\u00f9ng xem vi\u1ec7c di chuy\u1ec3n c\u00e1c \u0111o\u1ea1n [l1,r1] th\u00e0nh [l2,r2]:</p><ul><li>Di chuy\u1ec3n l1 --&gt; l2:<ul><li>N\u1ebfu l1 v\u00e0 l2 c\u00f9ng block: V\u1edbi m\u1ed7i thao t\u00e1c, \u0111\u1ed9 ph\u1ee9c t\u1ea1p kh\u00f4ng qu\u00e1 sqrt(N). Do \u0111\u00f3, \u0111\u1ed9 ph\u1ee9c t\u1ea1p trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y c\u1ee7a c\u1ea3 Q thao t\u00e1c l\u00e0 O(Q*sqrt(N)).</li><li>N\u1ebfu l1 v\u00e0 l2 kh\u00e1c block: V\u00ec ta \u01b0u ti\u00ean sort theo block c\u1ee7a l, n\u00ean tr\u01b0\u1eddng h\u1ee3p n\u00e0y ch\u1ec9 x\u1ea3y ra kh\u00f4ng qu\u00e1 sqrt(N) l\u1ea7n. \u1ede tr\u01b0\u1eddng h\u1ee3p n\u00e0y, ta m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed1i \u0111a l\u00e0 O(N), n\u00ean v\u1edbi t\u1ea5t c\u1ea3 c\u00e1c thao t\u00e1c trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 O(N*sqrt(N)).</li></ul></li><li>Di chuy\u1ec3n r1 --&gt; r2:<ul><li>N\u1ebfu l1 v\u00e0 l2 c\u00f9ng block: V\u00ec ta sort t\u0103ng theo r, n\u00ean v\u1edbi m\u1ed7i block c\u1ee7a l, ta ch\u1ec9 m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng l\u00e0 O(N). Do c\u00f3 sqrt(N) block kh\u00e1c nhau c\u1ee7a l, n\u00ean t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y l\u00e0 O(N*sqrt(N))</li><li>N\u1ebfu l1 v\u00e0 l2 kh\u00e1c block: Nh\u01b0 tr\u00ean \u0111\u00e3 ph\u00e2n t\u00edch, ta ch\u1ec9 c\u00f3 sqrt(N) l\u1ea7n \u0111\u1ed5i block, m\u00f4i l\u1ea7n \u0111\u1ed5i block ta m\u1ea5t \u0111\u1ed9 ph\u1ee9c t\u1ea1p O(N) \u0111\u1ec3 di chuy\u1ec3n r. Do \u0111\u00f3 t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a tr\u01b0\u1eddng h\u1ee3p n\u00e0y l\u00e0 O(N*sqrt(N)).</li></ul></li></ul><p>V\u1eady, \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng l\u00e0 O(N*sqrt(N) + Q*sqrt(N)).</p><p><strong>M\u1edf r\u1ed9ng</strong></p><p>V\u1edbi m\u1ee5c \u0111\u00edch l\u00e0m b\u00e0i to\u00e1n kh\u00f3 h\u01a1n, x\u00e9t b\u00e0i to\u00e1n khi m\u00e0 ch\u00fang ta kh\u00f4ng th\u1ec3 x\u00f3a m\u1ed9t s\u1ed1 kh\u1ecfi CTDL, m\u00e0 ch\u1ec9 c\u00f3 th\u1ec3 th\u00eam (v\u00e0 reverse c\u00e1c thao t\u00e1c n\u00e0y tr\u01b0\u1edbc khi th\u1ef1c hi\u1ec7n b\u1ea5t k\u1ef3 thao t\u00e1c th\u00eam n\u00e0o). M\u1ed9t v\u00ed d\u1ee5 CTDL lo\u1ea1i n\u00e0y l\u00e0 Disjoint set, v\u00e0 vi\u1ec7c x\u1eed l\u00fd truy v\u1ea5n xu\u1ea5t hi\u1ec7n trong b\u00e0i to\u00e1n\u00a0<a href=\"http://www.codechef.com/problems/GERALD07\">Codechef - GERALD07</a>.</p><p>\u00a0</p><p>C\u00e1ch l\u00e0m v\u1eabn l\u00e0 \u00e1p d\u1ee5ng Mo's algorithm, tuy nhi\u00ean v\u00ec kh\u00f4ng th\u1ec3 x\u00f3a ph\u1ea7n t\u1eed, n\u00ean ta kh\u00f4ng th\u1ec3 di chuy\u1ec3n t\u1eeb l1 sang l2 m\u1ed9t c\u00e1ch d\u1ec5 d\u00e0ng \u0111\u01b0\u1ee3c.</p><p>\u00a0</p><p>\u0110\u1ec3 \u0111\u01a1n gi\u1ea3n, ch\u00fang ta ch\u1ec9 x\u00e9t nh\u1eefng truy v\u1ea5n [l, r] m\u00e0 l v\u00e0 r r\u01a1i v\u00e0o 2 block kh\u00e1c nhau. \u0110\u1ec3 gi\u1ea3i quy\u1ebft vi\u1ec7c kh\u00f4ng di chuy\u1ec3n ng\u01b0\u1ee3c \u0111\u01b0\u1ee3c, sau khi tr\u1ea3 l\u1eddi truy v\u1ea5n [l, r], ch\u00fang ta c\u1ea7n reverse c\u00e1c thao t\u00e1c insert t\u1eeb l \u0111\u1ebfn cu\u1ed1i block ch\u1ee9a l. Sau \u0111\u00f3, khi tr\u1ea3 l\u1eddi truy v\u1ea5n [l2, r2], ch\u00fang ta ch\u1ec9 c\u1ea7n th\u1ef1c hi\u1ec7n insert t\u1eeb r+1 \u0111\u1ebfn r2 v\u00e0 t\u1eeb l2 \u0111\u1ebfn cu\u1ed1i block ch\u1ee9a l2.</p><p>\u00a0</p><p>Chi ti\u1ebft c\u00e0i \u0111\u1eb7t:</p><ul><li>G\u1ecdi h\u00e0m snapshot() l\u00e0 ch\u1ee5p l\u1ea1i tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i c\u1ee7a CTDL.</li><li>G\u1ecdi h\u00e0m rollback() l\u00e0 reverse nh\u1eefng thao t\u00e1c insert k\u1ec3 t\u1eeb l\u1ea7n snapshot() cu\u1ed1i c\u00f9ng.</li><li>Ch\u00fang ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t nh\u01b0 sau:</li></ul><pre><code>   rt = sqrt(n)\n   init()  // this initializes our data structure (clears it)\n   snapshot()\n   for all queries q\n       if q.r - q.l + 1 &lt;= rt + 1 // we process light queries\n           for j := q.l to q.r\n               insert(j)\n           store answer for query q\n           rollback()\n   last_bucket = -1\n   for all queries q \n       if q.r - q.l + 1 &lt;= rt + 1: continue\n       bucket = q.l / rt\n\n       if bucket != last_bucket\n           init()\n           l = (bucket + 1) * rt // right border of the bucket\n           r = q.r\n           for j := l to r\n               insert(j)\n       last_bucket = bucket\n\n       while r &lt; q.r \n           insert(++r)\n       snapshot()\n       for j := q.l to l - 1\n           insert(j)\n       store answer for query q\n       rollback()</code></pre><p>\u00a0</p><p>B\u00e0i t\u1eadp \u00e1p d\u1ee5ng:</p><ul><li><a href=\"http://codeforces.com/contest/86/problem/D\">Codeforces Yandex 2011 Round 2 - D</a></li><li><a href=\"http://www.codechef.com/problems/GERALD07\">Codechef - GERALD07</a></li></ul><p>\u00a0</p>", "updated_by": 1, "created_at": "2015-03-28T20:22:20Z", "reply_on": null, "updated_at": "2015-03-28T20:23:02Z", "created_by": 1, "topic": 4, "num_downvotes": 0, "topic_post": true, "num_upvotes": 0}, "model": "forum.post", "pk": 12}]